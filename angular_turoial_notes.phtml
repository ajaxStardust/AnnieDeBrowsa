<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    Brad Traversy&apos;s Angular Tutorial - My Notes
  </title>
  <link rel="icon" type="image/ico" href="favicon.ico">
  <link rel="shortcut icon" type="image/ico" href="favicon.ico">
  <link href="notes.css" rel="stylesheet" type="text/css" media="screen" />
  <style>
    #angular_notes_dl dt {
      text-transform: uppercase;
      font-weight: bold;
      /* border-right:           9pt solid #e5e5e5; */
      border-left: 4pt solid #F9322C;
      padding-left: 1em;
    }

    #angular_notes_dl dd dl dt {
      /* border-right:           6pt solid #e5e5e5; */
      border-left: 6pt solid #e5e5e5;
    }

    dl dd {
      margin: 1em 0 2em 2em;
    }

    .dd_div {
      margin: 0.5em;
    }

    .code {
      background-color: #101010;
      color: #F0F0F9;
      padding: 0.5em;
      white-space: pre-wrap;
    }

    .code:before {
      content: 'user@laragigs $> ';
      color: lawngreen;
    }

    h2,
    h3,
    h4 {
      font-family: 'liberation serif', 'dejavu serif', Georgia, 'Times New Roman', Times, serif;
    }

    h2 {
      border-right-width: 1pt;
    }

    h3 {
      border-right: 0;
    }

    .content code {
      background-color: #EAEAEA;
    }

    .specialcode {
      /* COLOR */
      background-color: #014151;
      color: cornsilk;
      /* padding or margin */
      display: inline-block;
      padding: 0.1em 0.64em;
      font-family: 'DejaVu sans mono', 'Courier New', Courier, monospace;
    }

    pre .specialcode {
      color: blue;
      font-weight: 700;
      background: inherit;
      border: 1px solid white;
    }

    dt code {
      font-size: larger;
      text-transform: none;

    }

    p code, li code {
      font-weight: 700;
      font-size: larger;
    }
  </style>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css" />
  <link href="https://api.mapbox.com/mapbox-gl-js/v2.1.1/mapbox-gl.css" rel="stylesheet" />
  </head>

<body>
 <!--    ^ < SECTION >   id:pagewidth    ^    -->
 <section id="pagewidth" class="container">
    <!--    ^ class:content    ^    -->
    <div class="">
      <section id="header">
        <!-- ^ < SECTION > id:header ^ -->
        <h1 class="bg-dark text-light text-end pe-3">Angular Notes - Angular Tutorial</h1>
        <p class="p_lead">Herein are notes on the Anqular tutorial, available at YouTube. Reviewed on August 9, 2022</p>
      </section><!-- $ < SECTION > id:header  -->
                              <!-- ^ < SECTION > id:general_notes ^ -->      
      <section id="general_notes">
        <div id="gen_notes_div" class="notes">
          <!-- ^:begin #general_notes ^ -->
          <h2 style="clear:both;">General Notes</h2>
          <p>Ensure that your Development enviroment is configured for Angular.</p>
          <ol>
            <li>Follow the steps here to ensure that <code>Node.js</code>, and <code>NPM</code>, and <code>NVM</code> (Node Version Manager) are installed: <a href="https://angular.io/guide/setup-local" target="_blank" title="Local installation instructions to setup local environment">https://angular.io/guide/setup-local</a></li>
            <li>Start the development server so pages are correctly served at port <code>:4200</code></li>

          </ol>
          <p><code>Tyepscript</code> - Ensure that your javascript uses strict typing. Although Angular can process regular javascript, it is best practice to code it strictly typed (e.g. string, int, enum, etc.)</p>
          <p>In this Tutorial at approx <code>22:45</code>, Brad advises to create a <code class="specialcode">&lt;button&gt;</code> element in a separate component from the Header, as then it can be used in multiple places. Use the following command to generate the new component, in the components folder: <code>ng generate component components/button</code></p>
      </div></section><!-- $ < SECTION > GENERAL NOTES  -->      
      <section id="important_commands"><!-- ^ < SECTION > id:important_commands  ^ -->        
        <h2>Important Commands</h2>
        <p>Commands should be executed on the command line in the project directory (E.g. /var/www/html/angular-crash) using <code>NPM</code> / <code>Node.js</code>), unless insatlling globally with <code>--global -g</code>:</p>
        <dl>
          
          <dt><code>ng generate</code></dt>
          <dd>
            <ul>
              <li class="nobull"><code>ng generate component components/header</code> : results in the following files generated <img src="./Brad Traversy&#39;s Angular Tutorial - My Notes_files/ng_generate_components.png" alt="ng generate"> </li>
              
          </ul></dd>
          <dt><code>[directives]</code></dt>
          <dd>Can be used, for example <code>[ngStyle]</code> to embed inline style in an HTML element</dd>
        </dl>
      </section><!-- $ < SECTION > id:important_commands -->
      <section id="important_files"><!-- ^ < SECTION > id:important_files  ^ --> 
        <h2>Important files</h2>
        <p>Get to know these files (and file elements), and folders</p>
        <dl>
          <dt><code>app.component</code>.FILE</dt>
          <dd>
            <p>When we create an app, there are generally four (4) files used:</p>
            <pre style="position: relative;">#       /var/www/html/angular-crash/src/app
#       |-- <span class="specialcode">app.component.css</span>
#       |-- <span class="specialcode">app.component.html</span>
#       |-- <span class="specialcode">app.component.spec.ts</span>
#       |-- <span class="specialcode">app.component.ts</span></pre>
            <ol>
              <li><code>app.component.ts</code> - the main class. contains properties, methods, URL's to stylesheets, etc. Also contains reference to the <code class="specialcode">&lt;app-root&gt;</code>
              </li>
              <li><code>app.component.html</code> - where we put the HTML that will be served to <code>:4200</code></li>
            </ol>

          </dd>
          <dt>
            <code>.ts</code> file extension
          </dt>
          <dd>Ensure that all "javascript" type files have the <code class="speacialcode">.ts</code> file extension for Angular to function properly</dd>
          <dt>
            <code>
              &lt;app-root&gt;&lt;/app-root&gt;</code>
          </dt>
          <dd>The primary element in the <code>./src/index.html</code> file. Angular uses javascript to render its HTML into this element.</dd>
          <dt id="routing">
            <code>angular.json</code>
          </dt>
          <dd>
            <div class="dd_div">
              <p>In the <code>angular.json</code> file, we can setup project-wide configurations, such as include a link to a <code class="specialcode">cdn</code></p>
              <pre style="position: relative;">#       /var/www/html/angular-crash/
#       |-- <span class="specialcode">angular.json</span>
#       |-- some.ts
#       |-- some.json
#       |-- some.js</pre>
            </div>
          </dd>
          <dt>Folder: <code>./src/app</code></dt>
          <dd>
            <p>The main application. All of the components go here (“…most likely…”)</p>
          </dd>
        </dl>
      </section>

      <section id="angular_glossary" class="container">

        <div>
          <!-- ^:begin #angular_GLOSSARY ^ -->
          <h2>Glossary:</h2>
          <p> list here terms and other quick-reference items about Angular</p>
          <dl id="angular_notes_dl">
            <dt><code>@component ({ <strong class="specialcode">selector: 'app-_SOMENAME_'</strong>})</code></dt>
            <dd>The selector (e.g. in <code>header.component.ts</code>) will always be 'app-' or “app dash” some-name</dd>
            <dt><code>{{}}</code></dt>
            <dd>Double Curly Braces - for <code>code interpolation</code>. This is where Angular will parse/ render dynamic data (e.g. by variable name such as <code>{{variable_name_here}}</code>)</dd>
            <dt><code>ngOnInit()</code></dt>
            <dd>use this method of <code>header.components.ts</code> if we want to have something execute on load. </dd>
          </dl>
        </div> <!-- $ :end #angular_glossary -->
        <p class="content footer cite">Based on Brad Traversy's <a href="https://github.com/bradtraversy/angular-crash-2021" target="_blank" title="View original">Angular</a> Crash Course.
        </p>

      </section>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" crossorigin="anonymous"></script>
</body>

</html>