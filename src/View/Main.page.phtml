<?php

namespace P2u2\View;

use P2u2\Model\Environment as Env;
use P2u2\Model\Evalpath as Evalpath;
use P2u2\Model\Functions as Functions;
use P2u2\Model\Newmethod as Newmethod;
use P2u2\Model\P2u2 as P2u2;

$Env = new Env(NS2_ROOT);
$initEnv = $Env->whatis(NS2_ROOT);
// set Env variable array ver01
$title = $Env->initialize_enviornment['title'];

if (isset($_GET['path2url'])) {
    $path2url = $_GET['path2url'];
} else {
    $path2url = NS2_ROOT;
}

// path sent to process
$enterpathhere = isset($path2url) ? $path2url : $_SERVER['DOCUMENT_ROOT'] . '/my_Notes/index.php';
// set Env vars based on enterpathhere
// DIFF? whatis allows for path
$whatis = $Env->whatis($enterpathhere);

// P2u2()
$P2u2 = new P2u2($enterpathhere);
// P2u2() filtered path to process
$clean_url = $P2u2->clean_url_chars($enterpathhere);
// P2u2()
$extract_components = $P2u2->extract_path_components($P2u2->clean_url_chars($enterpathhere));

// Evalpath()
$Eval = new Evalpath($enterpathhere);
// Evalpath()
$EvalPathHere = $Eval->test_location($enterpathhere);

// Newmethod()
$Newmethod = new Newmethod($enterpathhere);
// Newmethod()
$buildUrl = $Newmethod->buildUrl($enterpathhere);
// Newmethod()
$buildUrlLast = $Newmethod->buildUrlLast($enterpathhere);
// Newmethod()
$contructNewMethod = $Newmethod->_construct_NewMethod;

// Functions()
$Functions = new Functions();

?>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <?php print $whatis['title']; ?>
    </title>
    <link rel="icon" type="image/ico" href="favicon.ico">
    <link rel="shortcut icon" type="image/ico" href="favicon.ico">
    <link rel="stylesheet" href="https://unpkg.com/chota@latest">
    <link href="assets/css/lightslider.css" rel="stylesheet">
    <style>.displaynone {display:none;}</style>
</head>

<body>
    <div id="pagewidth" class="container">
        <!-- #HEADER -->
        <section id="header">
            <h1 class="bg-dark text-light text-end pe-3 h1"><?= $whatis['page_heading']; ?></h1>
        </section>
        <section>
            <div class="row  row-cols-1 row-cols-md-2 g-4">
                <div class="col">
                    <div class="card">
                        <div class="card-body">
                            <h2>Processing Summary:</h2>
                            <div>
                                <!-- new approach -->
                                <dl>
                    <dt class="pointer">Path <span class="thin">(three different ways)</span> <span class="normal blue pointer" id="show_g01"
                            onclick="swap_text('show_g01','glossary_01') "> [details...]</span>
                    </dt>
                    <dd id="glossary_01" class="displaynone">
                         <p>Using regular expressions and other syntax, the URL components which make up the path
                                    are separated and stored in an array, "path[]". </p>
                                <p><code>path[]</code> is derived from <code
                                        class="php">$Eval->test_location($enterpathhere)['pb'];</code></p>
                                <ul>
                                    <li><code>buldByComp</code> uses _SERVER[], path[], to build the resulting HTTP url.
                                    </li>
                                    <li><code>concatThis</code> uses that info but first removes some standard known
                                        paths in attempt to achive a more likely correct URL, and tends to be the most reliable of the three results.</li>
                                    <li><code>concatSwitch</code> employs the use of a switch case logic. This is usually garbage for some reason. All in the spirit of playing with code.</li>
                                </ul>
                                <?php
        $common_paths=[
            '\/var\/www\/html',
            '\/var\/www\/htdocs',
            '\/var\/www\/public_html',
            '\/var\/www\/htdocs\/public_html',
            '\/var\/www\/wwwroot'
        ];
$trimmed_new_url = str_ireplace('/var/www/' . $contructNewMethod['_dynamichost'], '', $contructNewMethod['new_url_concat']);
$buildByComp = $_SERVER['REQUEST_SCHEME'] . '://' . $contructNewMethod['_dynamichost'] . '/' . ltrim($trimmed_new_url, '/');
$concatThis = $_SERVER['REQUEST_SCHEME'] . '://';
$concatSwitch = $_SERVER['REQUEST_SCHEME'] . '://';
foreach ($P2u2->path_comps['matches'] as $mKey => $mVal) {
    echo '<br>path[' . $mKey . ']: ' . $mVal;
    if ($mVal != 'var' && $mVal != 'www') {
        $concatThis .= ltrim($mVal, '/') . '/';
    }
}

$process_location = $Eval->test_location($enterpathhere)['pb'];

foreach ($process_location as $mKey => $mVal) {
    echo '<br>path[' . $mKey . ']: ' . $mVal;
    $concatSwitch .= str_ireplace('/', '', $mVal) . '/';
}
?>
</dd>
</dl>
<?php
echo '<dl id="resulting_url_anchors">';
echo '<dt>buildByComp</dt><dd><a href="' . $buildByComp . '" target="_blank">' . $buildByComp . '</a></dd>';
echo '<dt>concatThis</dt><dd><a href="' . rtrim($concatThis, '/') . '" target="_blank">' . rtrim($concatThis, '/') . '</a></dd>';
echo '<dt>concatSwitch</dt><dd><a href="' . $concatSwitch . '" target="_blank">' . $concatSwitch . '</a></dd></dl>';
/*  echo '<h4>buildUrl vals:</h4>';
                       if(is_array($buildUrl)){
                       foreach($buildUrl as $bKey => $bVal) {
                        echo '<br>bVal['.$bKey.']: '.$bVal ;
                       }
                    } */

?>
                            </div>
                        </div>
</div>
<div>
                        <div class="card">
                        <div class="card-body">
                            <h3 class="card-heading">@ToDo</h3>
                            <h4>Nav-go-up thing</h4>
                            <p>The value derived here, set as goUp[url], should be placed as the first &lt;li&gt; item in the primary navigation list</p>
                            <!-- php nav goup -->
                            <ol id="navgoup_demo">
                                <?php
                                $goUpArray = $Functions->process_goup();
                                foreach ($goUpArray as $goUpKey => $goUpVal) {
                                    echo '<li class="navgoup_item">goUp[' . $goUpKey . ']: ' . $goUpVal . '</li>';
                                }
                                ?>
                            </ol>
                        </div>
                    </div>
                    </div>
                </div>
                <div class="col">
                    <div class="card">
                        <div class="card-body">
                            <?php
                            include 'Form.page.phtml';
                            ?>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <section>

            <div class="row  row-cols-1 row-cols-md-2 g-4">
                <div class="col">
                <!-- moved from here card -->
                </div>

 </div>

        </section>
        <section class="container">

            <?php
            // require 'LateLogic.page.phtml';
            ?>
            <div class="col">
                <h3 class="card-heading">Server Info</h3>
                <?php
                echo '<br>__FILE__ info shown: ' . __FILE__;
                if (isset($Env->initialize_enviornment['abspathtml'])) {
                    echo '<p><strong>ABSPATHHTML</strong>:' . $Env->initialize_enviornment['abspathtml'];
                } else {
                    echo '<p><strong class="red">$Env->initialize_enviornment[abspathtml] is not set</strong></p>';
                }

                echo '<div class="container"><div class="bg-dark d-flex justify-content-between flex-wrap" id="info_container"><p class="bg-dark text-light">Served by: <span class="bg-dark text-warning">' . $Env->initialize_enviornment['serversoftware'] . '</span></p>
        <p class="bg-dark text-light">PHP Version: <span class="text-warning">' . phpversion() . '</span></p>
        <p class="bg-dark text-light">Server Name: <span class="text-info">' . $Env->initialize_enviornment['server_name'] . '</span></p>
        <p class="bg-dark text-light">Server Addr: <span class="text-info">' . $Env->initialize_enviornment['server_addr'] . '</span></p>
        </div></div>';
                ?>
            </div>
            <div class="notes">
            </div> <!--  $    div   .notes    $   -->
        </section> <!--    $   section   #general_notes  .container    $   -->
        <section class="container">
        </section> <!-- $  section .container          -->
        <section class="footer px-4">
            <!--    .FOOTER     -->
            <div class="row gx-5">
                <div class="col">
                    <div class="p-3 border bg-light"> Based on Notes by <a href="https://github.com/ajaxStardust"
                            target="_blank" title="View original">@ajaxStardust</a> <em>Laravel</em> notes:</div>
                </div>
                <div class="col">
                    <div class="p-3 border bg-light text-end"><kbd><?php echo $whatis['lastMod']; ?></kbd></div>
                </div>
            </div>
        </section>
    </div> <!--    .content  -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script src="assets/js/showme-hideme.js"></script>
    <script src="assets/js/lightslider.js"></script>
    <script src="assets/js/p2u2.js"></script>
    <script src="assets/js/dynamicdrop.js"></script>
</body>

</html>